"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const fsx = require("fs-extra");
const Utils = require("../../common/utilities");
const BaseComponent = require("../component/BaseComponentGenerator");
// tslint:disable-next-line:no-any
function defineOptions(generator, type = 'Extension') {
    BaseComponent.defineOptions(generator, type);
}
exports.defineOptions = defineOptions;
class BaseExtensionGenerator extends BaseComponent.BaseComponentGenerator {
    constructor() {
        super(...arguments);
        this.folderName = 'extensions';
    }
    prompting() {
        return super.prompting();
    }
    configuring() {
        super.configuring();
        this.ensureDependencyGroup('extension');
        if (!this.hasElementsXml()) {
            this.packageSolutionJson.addExtensionFeature(Utils.generateGuid(), this.includeClientSideInstances());
        }
    }
    writing(shouldCopy = true) {
        super.writing(shouldCopy);
        if (shouldCopy) {
            if (!this.hasElementsXml()) {
                const dest = path.join(this.destinationRoot(), 'sharepoint');
                this.copyTemplate(path.join(this.sourceRoot(), 'sharepoint'), dest);
            }
        }
    }
    install() {
        super.install();
    }
    hasElementsXml() {
        const elementsXmlPath = path.join(this.destinationRoot(), 'sharepoint', 'assets', 'elements.xml');
        return fsx.existsSync(elementsXmlPath);
    }
}
exports.BaseExtensionGenerator = BaseExtensionGenerator;
//# sourceMappingURL=BaseExtensionGenerator.js.map