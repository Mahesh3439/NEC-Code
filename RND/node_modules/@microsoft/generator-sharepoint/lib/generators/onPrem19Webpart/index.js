"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const Utils = require("../../common/utilities");
const BaseComponent = require("../component/BaseComponentGenerator");
// tslint:disable-next-line:no-any
function composeWith(base, options) {
    Utils.compose(path.basename(__dirname), base, options);
}
exports.composeWith = composeWith;
// tslint:disable-next-line:no-any
function defineOptions(generator) {
    BaseComponent.defineOptions(generator, 'Web part');
}
exports.defineOptions = defineOptions;
class WebpartGenerator extends BaseComponent.BaseComponentGenerator {
    // tslint:disable-next-line:no-any
    constructor(args, options) {
        super(args, options);
        this.friendlyName = 'Web part';
        this.codeName = 'WebPart';
        this.allowedFrameworks = ['knockout', 'react'];
        this.folderName = 'webparts';
        defineOptions(this);
    }
    initializing() { }
    prompting() {
        this.ensureCorrectFolder();
        if (!this.shouldExecute()) {
            return Promise.resolve();
        }
        return super.prompting();
    }
    configuring() {
        if (this.shouldExecute()) {
            super.configuring();
            this.ensureDependencyGroup('webpart');
            this.serveJson.setUpForWebParts();
        }
    }
    writing() {
        if (this.shouldExecute()) {
            super.writing(true);
        }
    }
    install() {
        if (this.shouldExecute()) {
            super.install();
        }
    }
    end() { }
    shouldExecute() {
        return this.config.get('environment') === 'onprem19' &&
            this.config.get('componentType') === 'webpart';
    }
}
exports.WebpartGenerator = WebpartGenerator;
// Yeoman expects exports of this type, which overrides the TS exports above
// Ensure that anything marked as export above is also listed here
module.exports = WebpartGenerator;
module.exports.defineOptions = defineOptions;
module.exports.composeWith = composeWith;
//# sourceMappingURL=index.js.map