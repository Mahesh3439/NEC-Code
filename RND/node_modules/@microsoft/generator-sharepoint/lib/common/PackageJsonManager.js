"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const JsonManager_1 = require("./JsonManager");
class PackageJsonManager extends JsonManager_1.JsonManager {
    static load(filepath, fs) {
        if (this._instance) {
            throw new Error(`Cannot create a second instance of PackageJsonManager`);
        }
        let data;
        try {
            data = fs.readJSON(filepath);
        }
        catch (error) {
            data = undefined;
        }
        PackageJsonManager._instance = new PackageJsonManager(filepath, fs, data);
    }
    static reset() {
        PackageJsonManager._instance = undefined;
    }
    static get instance() {
        return this._instance;
    }
    addDependency(dependency, version) {
        // check that version is valid semver?
        // resolve any conflicts
        if (!PackageJsonManager.instance.data.dependencies) {
            PackageJsonManager.instance.data.dependencies = {};
        }
        PackageJsonManager.instance.data.dependencies[dependency] = version;
    }
    // tslint:disable:no-any
    addResolution(dependency, resolution) {
        if (!PackageJsonManager.instance.data.resolutions) {
            PackageJsonManager.instance.data.resolutions = {};
        }
        PackageJsonManager.instance.data.resolutions[dependency] = resolution;
    }
}
exports.PackageJsonManager = PackageJsonManager;
//# sourceMappingURL=PackageJsonManager.js.map