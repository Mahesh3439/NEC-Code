"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
const JsonManager_1 = require("./JsonManager");
class ServeJsonManager extends JsonManager_1.JsonManager {
    static load(filepath, fs) {
        if (this._instance) {
            throw new Error(`Cannot create a second instance of ServeJsonManager`);
        }
        let data;
        try {
            data = fs.readJSON(filepath);
        }
        catch (error) {
            // Bootstrap the serve.json file with the basic information
            data = undefined;
        }
        if (!data) {
            data = {
                '$schema': 'https://developer.microsoft.com/json-schemas/core-build/serve.schema.json',
                port: 4321,
                https: true
            };
        }
        ServeJsonManager._instance = new ServeJsonManager(filepath, fs, data);
    }
    static reset() {
        ServeJsonManager._instance = undefined;
    }
    static get instance() {
        return this._instance;
    }
    addConfiguration(name, configuration) {
        // The first configuration is the default one
        if (!this.data.serveConfigurations) {
            this.data.serveConfigurations = {
                default: configuration
            };
        }
        this.data.serveConfigurations[name] = configuration;
    }
    setUpForWebParts() {
        _.merge(this.data, {
            initialPage: 'https://localhost:5432/workbench',
            https: true,
            api: {
                port: 5432,
                entryPath: 'node_modules/@microsoft/sp-webpart-workbench/lib/api/'
            }
        });
    }
}
exports.ServeJsonManager = ServeJsonManager;
//# sourceMappingURL=ServeJsonManager.js.map