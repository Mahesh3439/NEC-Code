"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const JsonManager_1 = require("./JsonManager");
class TeamsManifestJsonManager extends JsonManager_1.JsonManager {
    static load(filepath, fs) {
        if (this._instance) {
            throw new Error(`Cannot create a second instance of TeamsManifestJsonManager`);
        }
        let data;
        try {
            data = fs.readJSON(filepath);
        }
        catch (error) {
            data = undefined;
        }
        if (!data) {
            data = {
                '$schema': 'https://developer.microsoft.com/en-us/json-schemas/teams/v1.2/MicrosoftTeams.schema.json'
            };
        }
        TeamsManifestJsonManager._instance = new TeamsManifestJsonManager(filepath, fs, data);
    }
    static reset() {
        TeamsManifestJsonManager._instance = undefined;
    }
    static get instance() {
        return this._instance;
    }
    setUpManifest(teamsManifestData) {
        const data = this.data;
        data.packageName = teamsManifestData.componentName;
        data.name.short = teamsManifestData.componentName;
        data.id = teamsManifestData.componentId;
        data.description.short = teamsManifestData.componentDescription;
        data.description.full = teamsManifestData.componentDescription;
        /*
         * 'dest' query parameter must be encoded to avoid being processed
         * as separate query parameters by the server.
         * %3F = ?
         * %26 = &
         */
        data.configurableTabs[0].configurationUrl = 'https://{teamSiteDomain}{teamSitePath}/_layouts/15/TeamsLogon.aspx' +
            '?SPFX=true' +
            '&dest={teamSitePath}/_layouts/15/teamshostedapp.aspx' +
            '%3FopenPropertyPane=true' +
            '%26teams' +
            `%26componentId=${teamsManifestData.componentId}` +
            '%26forceLocale={locale}';
    }
}
exports.TeamsManifestJsonManager = TeamsManifestJsonManager;
//# sourceMappingURL=TeamsManifestJsonManager.js.map